version: '3.5'

services:
  refactoring-symfony-web:
    container_name: refactoring-symfony-web
    build:
      context: ./docker/nginx
      args:
        UID: $U_ID
    ports:
      - 1000:80
    volumes:
      - ./public:/appdata/www/public
    depends_on:
      - refactoring-symfony-be
    networks:
      - refactoring-symfony-network

  refactoring-symfony-be:
    container_name: refactoring-symfony-be
    build:
      context: docker/php
      args:
        UID: $U_ID
    volumes:
      - ./:/appdata/www
    ###> XDEBUG 3 ###
    # Use your client IP here
    # Linux: run "ip a | grep docker0"
    # Windows (with WSL2) and Mac: host.docker.internal
    environment:
      XDEBUG_CLIENT_HOST: 172.17.0.1
      XDEBUG_CLIENT_PORT: 9003
      PHP_IDE_CONFIG: serverName=docker-dev-env-for-symfony
    ports:
      - '1100:8000'
    networks:
      - refactoring-symfony-network
    depends_on:
        - refactoring-symfony-postgres
        - refactoring-symfony-mysql

  refactoring-symfony-postgres:
    container_name: refactoring-symfony-postgres
    image: postgres:14-alpine
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: passwd
      POSTGRES_DB: postgres_symfony
    volumes:
      - refactoring-symfony-pgsql-data:/var/lib/postgresql/data
    networks:
      - refactoring-symfony-network

  refactoring-symfony-mysql:
    container_name: refactoring-symfony-mysql
    image: mysql:8.0.26
    ports:
      - '3336:3306'
    environment:
      MYSQL_DATABASE: mysql_symfony
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - refactoring-symfony-mysql-data:/var/lib/mysql/data
    networks:
      - refactoring-symfony-network
    command: [ 'mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci' ]

  refactoring-symfony-rabbit:
    container_name: refactoring-symfony-rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - refactoring-symfony-network

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  refactoring-symfony-pgsql-data:

###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
  refactoring-symfony-mysql-data:

networks:
  refactoring-symfony-network:
    external: true
